services:
  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: telegram_bot
    volumes:
      - ./bot/logs:/app/logs
      - ./credentials.json:/app/credentials.json:ro
    networks:
      - app_network
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - webapp

  webapp:
    build:
      context: .
      dockerfile: webapp/Dockerfile
    container_name: telegram_webapp
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./credentials.json:/app/credentials.json:ro
      - ./webapp/logs:/app/logs
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot:/etc/nginx/ssl:ro
    networks:
      - app_network
    depends_on:
      - webapp


networks:
  app_network:
    driver: bridge